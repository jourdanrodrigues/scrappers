// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OlxCarAd {
  listId      Int    @id
  subject     String
  price       String
  date        Int
  location    String
  urlId       Int
  thumbnailId Int

  url       OlxUrlBranch @relation("Url", fields: [urlId], references: [id])
  thumbnail OlxUrlBranch @relation("Thumbnail", fields: [thumbnailId], references: [id])
}

model OlxUrlBranch {
  id           Int    @id @default(autoincrement())
  path         String @unique
  parentPathId Int?

  chidren            OlxUrlBranch[] @relation("Parent")
  parentPath         OlxUrlBranch?  @relation("Parent", fields: [parentPathId], references: [id])
  carAdsAsUrls       OlxCarAd[]     @relation("Url")
  carAdsAsThumbnails OlxCarAd[]     @relation("Thumbnail")

  @@unique([path, parentPathId], name: "uniqueUrlBranch")
}

model Requisition {
  id         Int        @id @default(autoincrement())
  registryId Int
  number     String
  password   String
  type       Int
  listeners  Listener[]
  phases     Phase[]
  pendencies Pendency[]

  @@unique([number, registryId], name: "requisitionPerRegistry")
}

model Listener {
  id            Int         @id @default(autoincrement())
  email         String
  requisition   Requisition @relation(fields: [requisitionId], references: [id])
  requisitionId Int
}

model Phase {
  id            Int         @id @default(autoincrement())
  date          DateTime
  description   String
  requisition   Requisition @relation(fields: [requisitionId], references: [id])
  requisitionId Int
}

model Pendency {
  id            Int         @id @default(autoincrement())
  date          DateTime
  description   String
  requisition   Requisition @relation(fields: [requisitionId], references: [id])
  requisitionId Int
}
